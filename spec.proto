syntax = "proto3";

package swaggerpetstore;

import "google/protobuf/empty.proto";

enum Status {
    PLACED = 0;
    APPROVED = 1;
    DELIVERED = 2;
}

message DeleteOrderRequest {
    // ID of the order that needs to be deleted
    int64 orderId = 1;
}

message GetOrderByIdRequest {
    // ID of pet that needs to be fetched
    int64 orderId = 1;
}

message GetOrdersRequest {
    enum GetOrdersRequestStatus {
        GET_ORDERS_REQUEST_STATUS_PLACED = 0;
        GET_ORDERS_REQUEST_STATUS_APPROVED = 1;
        GET_ORDERS_REQUEST_STATUS_DELIVERED = 2;
    }

    // Maximun number of orders to be returned.
    int64 limit = 1;
    GetOrdersRequestStatus status = 2;
}

message Order {
    bool complete = 1;
    int64 id = 2;
    int64 petId = 3;
    int32 quantity = 4;
    string shipDate = 5;
    Status status = 6;
}

message Orders {
    repeated Order orders = 1;
}

message PlaceOrderRequest {
    // order placed for purchasing the pet
    Order body = 1;
}

service SwaggerPetstoreService {
    // Delete purchase order by ID
    // 
    // For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors
    rpc DeleteOrder(DeleteOrderRequest) returns (google.protobuf.Empty) {}

    // Find purchase order by ID
    // 
    // For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions
    rpc GetOrderById(GetOrderByIdRequest) returns (Order) {}

    // Filter purchase order by some parameters
    // 
    // If you do not provide any filter parameter, all the orders will be returned.
    rpc GetOrders(GetOrdersRequest) returns (Orders) {}

    // Place an order for a pet
    rpc PlaceOrder(PlaceOrderRequest) returns (Order) {}
}